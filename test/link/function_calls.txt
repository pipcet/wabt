;;; TOOL: run-wasm-link
;;; FLAGS: -r --debug-names
(module
  (import "__extern" "foo" (func $import0 (param i32) (result i32)))
  (import "__extern" "bar" (func $import1 (param i32) (result i32)))
  (func $local_func (param i32)
     get_local 0
     call $local_func
     call $import0
     call $import1)
)
(module
  (import "__extern" "baz" (func $import0 (param f64)))
  (export "foo" (func $local_func))
  (func $local_func (param i64)
     f64.const 1
     call $import0
     i64.const 10
     call $local_func)
)
(;; STDOUT ;;;
linked.wasm:	file format wasm 0x000001

Sections:

     Type start=0x0000000a end=0x0000001c (size=0x00000012) count: 4
   Import start=0x00000022 end=0x00000041 (size=0x0000001f) count: 2
 Function start=0x00000047 end=0x0000004a (size=0x00000003) count: 2
   Export start=0x00000050 end=0x00000057 (size=0x00000007) count: 1
     Code start=0x00000059 end=0x0000008b (size=0x00000032) count: 2
   Custom start=0x00000091 end=0x000000ad (size=0x0000001c) "reloc.Code"

Section Details:

Type:
 - [0] (i32) -> i32
 - [1] (i32) -> nil
 - [2] (f64) -> nil
 - [3] (i64) -> nil
Import:
 - func[0] sig=0 <- __extern.bar
 - func[1] sig=2 <- __extern.baz
Function:
 - func[2] sig=1
 - func[3] sig=3
Export:
 - func[3] foo
Custom:
 - name: "reloc.Code"
  - section: Code
   - R_FUNC_INDEX_LEB   idx=0x2  addend=0    offset=0x6(file=0x5f)
   - R_FUNC_INDEX_LEB   idx=0x3  addend=0    offset=0xc(file=0x65)
   - R_FUNC_INDEX_LEB   idx=0    addend=0    offset=0x12(file=0x6b)
   - R_FUNC_INDEX_LEB   idx=0x1  addend=0    offset=0x24(file=0x7d)
   - R_FUNC_INDEX_LEB   idx=0x3  addend=0    offset=0x2c(file=0x85)

Code Disassembly:

00005a func[2]:
 00005c: 20 00                      | get_local 0
 00005e: 10 82 80 80 80 00          | call 0x2
           00005f: R_FUNC_INDEX_LEB   2
 000064: 10 83 80 80 80 00          | call 0x3
           000065: R_FUNC_INDEX_LEB   3
 00006a: 10 80 80 80 80 00          | call 0
           00006b: R_FUNC_INDEX_LEB   0
 000070: 0b                         | end
000071 func[3]:
 000073: 44 00 00 00 00 00 00 f0 3f | f64.const 0x1p+0
 00007c: 10 81 80 80 80 00          | call 0x1
           00007d: R_FUNC_INDEX_LEB   1
 000082: 42 0a                      | i64.const 10
 000084: 10 83 80 80 80 00          | call 0x3
           000085: R_FUNC_INDEX_LEB   3
 00008a: 0b                         | end
;;; STDOUT ;;)
